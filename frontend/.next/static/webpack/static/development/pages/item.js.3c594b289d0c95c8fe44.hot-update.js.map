{"version":3,"file":"static/webpack/static\\development\\pages\\item.js.3c594b289d0c95c8fe44.hot-update.js","sources":["webpack:///./components/SingleItem.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport styled from \"styled-components\";\r\nimport Head from \"next/head\";\r\nimport User from \"./User\";\r\nimport ButtonList from \"./ButtonList\";\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\n\r\nconst SingleItemStyles = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-auto-columns: 1fr;\r\n  grid-auto-flow: column;\r\n  min-height: calc(100vh - 70px);\r\n  .item-image {\r\n    width: 80%;\r\n    height: 80%;\r\n    object-fit: contain;\r\n    align-self: center;\r\n    justify-self: center;\r\n    @media (max-width: 800px) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  .datails {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    padding: 2rem 1rem;\r\n    box-sizing: border-box;\r\n    h2 {\r\n      font-size: 2.5rem;\r\n      text-align: center;\r\n    }\r\n    .buttonList {\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n      display: flex;\r\n      margin: 1em 0;\r\n      width: 100%;\r\n      a,\r\n      button {\r\n        background-color: ${props => props.theme.olive};\r\n        border: none;\r\n        color: white;\r\n        font-family: Montserrat;\r\n        border-radius: 10px;\r\n        font-size: 18px;\r\n        padding: 5px 10px;\r\n        margin: 5px;\r\n        transition: 0.3s;\r\n        cursor: pointer;\r\n        &:hover {\r\n          background: ${props => props.theme.pink};\r\n          box-shadow: ${props => props.theme.buttonShadow};\r\n        }\r\n        @media (max-width: 400px) {\r\n          margin-left: 0;\r\n          margin-right: 0;\r\n        }\r\n      }\r\n      .loading-add-btn {\r\n        min-width: 125.5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    item(where: { id: $id }) {\r\n      id\r\n      title\r\n      description\r\n      largeImage\r\n      price\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass SingleItem extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={SINGLE_ITEM_QUERY} variables={{ id: this.props.id }}>\r\n        {({ error, loading, data }) => {\r\n          if (error) return <Error error={error} />;\r\n          if (loading) return <p>Loading...</p>;\r\n          if (!data.item) return <p>No Item Found for {this.props.id}</p>;\r\n          const item = data.item;\r\n          return (\r\n            <User>\r\n              {({ data: { me } }) => (\r\n                <SingleItemStyles>\r\n                  <Head>\r\n                    <title>Store Wheels | {item.title}</title>\r\n                  </Head>\r\n                  <img\r\n                    className=\"item-image\"\r\n                    src={item.largeImage}\r\n                    alt={item.title}\r\n                  />\r\n                  <div className=\"datails\">\r\n                    <h2>Viewing {item.title}</h2>\r\n                    <p>{item.description}</p>\r\n                    <PriceTag>{formatMoney(item.price)}</PriceTag>\r\n                    <ButtonList item={item} />\r\n                  </div>\r\n                </SingleItemStyles>\r\n              )}\r\n            </User>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleItem;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAoCA;AAAA;AAWA;AAAA;AACA;AAAA;AAcA;AACA;AAcA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAoBA;AAGA;;;;AAlCA;AACA;AAoCA;;;;A","sourceRoot":""}