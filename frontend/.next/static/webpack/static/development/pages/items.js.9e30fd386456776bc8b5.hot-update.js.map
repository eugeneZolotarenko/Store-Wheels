{"version":3,"file":"static/webpack/static\\development\\pages\\items.js.9e30fd386456776bc8b5.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"./Item\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\nimport Search from \"./Search\";\r\nimport { css } from \"@emotion/core\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: image_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n      user { id }\r\n    }\r\n  }\r\n`;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst ItemsBlock = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  text-align: center;\r\n`;\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-gap: 40px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass Items extends Component {\r\n  render() {\r\n    return (\r\n      <ItemsBlock>\r\n        <Center>\r\n          <Search />\r\n          <Query\r\n            query={ALL_ITEMS_QUERY}\r\n            fetchPolicy=\"network-only\"\r\n            variables={{\r\n              skip: this.props.page * perPage - perPage\r\n              // first: PerPage\r\n            }}\r\n          >\r\n            {({ data, error, loading }) => {\r\n              console.log(data);\r\n              // if (loading) return <p>Loading...</p>;\r\n              if (loading)\r\n                return (\r\n                  <ClipLoader\r\n                    css={override}\r\n                    sizeUnit={\"px\"}\r\n                    size={150}\r\n                    color={\"#FF268E\"}\r\n                  />\r\n                );\r\n              if (error) return <p> Error: {error.message}</p>;\r\n              return (\r\n                <ItemsList>\r\n                  {data.items.map(item => (\r\n                    <Item item={item} key={item.id} />\r\n                  ))}\r\n                </ItemsList>\r\n              );\r\n            }}\r\n          </Query>\r\n          <Pagination page={this.props.page} />\r\n        </Center>\r\n      </ItemsBlock>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAcA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxCA;AACA;AA0CA;;;;;A","sourceRoot":""}