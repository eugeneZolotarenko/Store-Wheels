{"version":3,"file":"static/webpack/static\\development\\pages\\orders.js.7b4ed50833e127b6c941.hot-update.js","sources":["webpack:///./components/OrderList.js"],"sourcesContent":["import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport gql from \"graphql-tag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport OrderItemStyles from \"./styles/OrderItemStyles\";\r\nimport Error from \"./ErrorMessage\";\r\nimport User from \"./User\";\r\n// import { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nconst USER_ORDERS_QUERY = gql`\r\n  query USER_ORDERS_QUERY {\r\n    orders(orderBy: createdAt_DESC) {\r\n      id\r\n      total\r\n      createdAt\r\n      user {\r\n        id\r\n      }\r\n      items {\r\n        id\r\n        title\r\n        price\r\n        description\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst OrderUl = styled.ul`\r\n  display: grid;\r\n  grid-gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\r\n  max-width: calc(${props => props.theme.maxWidth} + 30px);\r\n  padding: 0 15px;\r\n  margin: 15px auto 60px auto;\r\n  @media (max-width: 700px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(80%, 1fr));\r\n  }\r\n`;\r\nconst headerStyle = {\r\n  textAlign: \"center\",\r\n  color: \"${props => props.theme.semiblack}\",\r\n  fontSize: \"190%\"\r\n};\r\n\r\nclass OrderList extends React.Component {\r\n  render() {\r\n    return (\r\n      <User>\r\n        <Query query={USER_ORDERS_QUERY}>\r\n          {({ data: { me, orders }, loading, error }) => {\r\n            if (!me) return null;\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <Error error={error} />;\r\n            return (\r\n              <div>\r\n                <h3 style={headerStyle}>\r\n                  You have {orders.length} order{orders.length === 1 ? \"\" : \"s\"}\r\n                </h3>\r\n                <OrderUl>\r\n                  {orders.map(order => (\r\n                    <OrderItemStyles key={order.id}>\r\n                      <Link\r\n                        href={{\r\n                          pathname: \"./order\",\r\n                          query: { id: order.id }\r\n                        }}\r\n                      >\r\n                        <a>\r\n                          <div className=\"order-meta\">\r\n                            <p>\r\n                              {order.items.reduce((a, b) => a + b.quantity, 0)}{\" \"}\r\n                              Items\r\n                          </p>\r\n                            <p>{order.items.length} Wheels</p>\r\n                            <p>{formatDistance(order.createdAt, new Date())}</p>\r\n                            <p>{formatMoney(order.total)}</p>\r\n                          </div>\r\n                          <div className=\"images\">\r\n                            {order.items.map(item => (\r\n                              <img\r\n                                key={item.id}\r\n                                src={item.image}\r\n                                alt={item.title}\r\n                              />\r\n                            ))}\r\n                          </div>\r\n                        </a>\r\n                      </Link>\r\n                    </OrderItemStyles>\r\n                  ))}\r\n                </OrderUl>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </User>\r\n    );\r\n  }\r\n}\r\nexport default OrderList;\r\nexport { USER_ORDERS_QUERY };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAqBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAnBA;AAkCA;AAIA;;;;AArDA;AACA;AAsDA;;;;;A","sourceRoot":""}